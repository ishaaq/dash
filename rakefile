#require 'fileutils'

PWD = Dir.pwd
PROJ = "#{PWD}/project"
TOOLS = "#{PROJ}/tools"
SBT = "java -Xmx512M -jar #{TOOLS}/sbt-launch-0.7.7.jar"
BUILD_PROPERTIES = "#{PROJ}/build.properties"
TARGET = "#{PWD}/target"
SCALA_VERSION = "2.9.1"
SCALA_LIB = "#{PROJ}/boot/scala-#{SCALA_VERSION}/lib/scala-library.jar"
TAR_BUILD = "#{TARGET}/tarbuild"

desc 'runs a full build - clean, package, tarball'
task :fullBuild => ["cleanPackage", "tarball"]

task :clean do
    rm_rf TARGET, :secure => true
end

task :package do
    sbt "update package"
end

task :cleanPackage => ["clean"] do
    sbt "update package"
end

task :tarball do
    version = load_properties("#{PROJ}/build.properties")['project.version']
    origDashJar = "#{TARGET}/scala_#{SCALA_VERSION}/dash_#{SCALA_VERSION}-#{version}.jar"
    dashJar = "#{TARGET}/dash.jar"
    jarTmp = "#{TARGET}/jarTmp"

    rm_rf [jarTmp, dashJar, TAR_BUILD], :secure => true

    mkdir_p jarTmp

    jarLocations = Dir.glob("#{PWD}/lib_managed/scala_#{SCALA_VERSION}/compile/*.jar") + [SCALA_LIB, origDashJar]
    jarLocations.each { |jar|
        sh "unzip -q -o #{jar} -d #{jarTmp}"
    }
    sh "(cd #{jarTmp};zip -9 -R -q #{dashJar} '*')"

    tmpDir = "#{TAR_BUILD}/dash"
    mkdir_p tmpDir
    cp_r "#{PWD}/bin/.", tmpDir
    cp dashJar, tmpDir
    cp_r "#{PWD}/scripts", tmpDir
    sh "tar czf #{TARGET}/dash.tgz --directory #{TAR_BUILD} dash"
end

def sbt(command)
    sh "#{SBT} #{command}"
end

def load_properties(properties_filename)
 	properties = {}
 	File.open(properties_filename, 'r') do |properties_file|
 	  properties_file.read.each_line do |line|
 	    line.strip!
 	    if (line[0] != ?# and line[0] != ?=)
 	      i = line.index('=')
 	      if (i)
 	        properties[line[0..i - 1].strip] = line[i + 1..-1].strip
 	      else
 	        properties[line] = ''
 	      end
 	    end
 	  end      
 	end
 	properties
end

